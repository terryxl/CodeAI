// Add anything else here that needs to be used outside of this library.
export { ModelProvider } from './models';
export { BotResponseMultiplexer } from './chat/bot-response-multiplexer';
export { ChatClient } from './chat/chat';
export { createClient } from './chat/client';
export { ignores, isCodyIgnoredFile } from './cody-ignore/context-filter';
export { CODY_IGNORE_POSIX_GLOB } from './cody-ignore/ignore-helper';
export { renderCodyMarkdown } from './chat/markdown';
export { getSimplePreamble } from './chat/preamble';
export { Transcript } from './chat/transcript';
export { Interaction } from './chat/transcript/interaction';
export { errorToChatError } from './chat/transcript/messages';
export { Typewriter } from './chat/typewriter';
export { reformatBotMessageForChat } from './chat/viewHelpers';
export { CodebaseContext } from './codebase-context';
export { createContextMessageByFile, getContextMessageWithResponse } from './codebase-context/messages';
export { DefaultChatCommands } from './commands/types';
export { dedupeWith, isDefined, isErrorLike, pluralize } from './common';
export { ProgrammingLanguage, languageFromFilename, markdownCodeBlockLanguageIDForFilename, } from './common/languages';
export { renderMarkdown } from './common/markdown';
export { posixFilePaths } from './common/path';
export { isWindows } from './common/platform';
export { assertFileURI, isFileURI, uriBasename, uriDirname, uriExtname, uriParseNameAndExtension, } from './common/uri';
export { SystemSecurity, } from './configuration';
export { NoopEditor } from './editor';
export { displayPath, displayPathBasename, displayPathDirname, displayPathWithoutWorkspaceFolderPrefix, setDisplayPathEnvInfo, } from './editor/displayPath';
export { hydrateAfterPostMessage } from './editor/hydrateAfterPostMessage';
export { FeatureFlag, FeatureFlagProvider, featureFlagProvider, } from './experimentation/FeatureFlagProvider';
export { GuardrailsPost, summariseAttribution } from './guardrails';
export { SourcegraphGuardrailsClient } from './guardrails/client';
export { CompletionStopReason, } from './inferenceClient/misc';
export { SourcegraphIntentDetectorClient } from './intent-detector/client';
export { logDebug, logError, setLogger } from './logger';
export { createOllamaClient } from './ollama/ollama-client';
export { MAX_BYTES_PER_FILE, MAX_CURRENT_FILE_TOKENS, MAX_HUMAN_INPUT_TOKENS, NUM_CODE_RESULTS, NUM_TEXT_RESULTS, SURROUNDING_LINES, tokensToChars, } from './prompt/constants';
export { PromptMixin, newPromptMixin } from './prompt/prompt-mixin';
export * from './prompt/templates';
export { truncateText, truncateTextNearestLine, truncateTextStart, } from './prompt/truncation';
export { SourcegraphBrowserCompletionsClient } from './sourcegraph-api/completions/browserClient';
export { SourcegraphCompletionsClient } from './sourcegraph-api/completions/client';
export { DOTCOM_URL, DOTCOM_AZURE_URL, LOCAL_APP_URL, isDotCom } from './sourcegraph-api/environments';
export { AbortError, NetworkError, RateLimitError, TimeoutError, TracedError, isAbortError, isAuthError, isNetworkError, isRateLimitError, } from './sourcegraph-api/errors';
export { SourcegraphGraphQLAPIClient, graphqlClient } from './sourcegraph-api/graphql';
export { ConfigFeaturesSingleton, addCustomUserAgent, customUserAgent, isNodeResponse, setUserAgent, } from './sourcegraph-api/graphql/client';
export { GraphQLTelemetryExporter } from './sourcegraph-api/telemetry/GraphQLTelemetryExporter';
export { NOOP_TELEMETRY_SERVICE } from './telemetry';
export { MockServerTelemetryRecorderProvider, NoOpTelemetryRecorderProvider, TelemetryRecorderProvider, } from './telemetry-v2/TelemetryRecorderProvider';
export { EventLogger } from './telemetry/EventLogger';
export { testFileUri } from './test/path-helpers';
export { addTraceparent, getActiveTraceAndSpanId, wrapInActiveSpan } from './tracing';
export { convertGitCloneURLToCodebaseName, isError } from './utils';
//# sourceMappingURL=index.js.map